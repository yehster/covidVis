
<table width=100%>
	<tbody>
	<tr>
		<td rowspan=1 style="vertical-align:top;width:5%;'">
		<div data-bind="template: {name:'USMapKO'}"></div>
			Growth Rates: 
			<span class=mapStatusNegative2>>50%  decline</span>
			<span class=mapStatusNegative1>5-50% decline</span>
			<span class=mapStatusNeutral>5% decline - 5% increase</span>
			<span class=mapStatusPositive1>5%-50% increase</span>
			<span class=mapStatusPositive2>>50%  increase</span>
		<div style="width:10em" data-bind="template: { name: 'selectedState'}"></div></td>
		<td style="width:30%"><canvas id="cases" width="600" height="400"></canvas></td>
		<td style="width:30%"><canvas id="byPopulation" width="600" height="400"></canvas></td>
		<td width=30%><canvas id="deaths" width="600" height="400"></canvas></td>

			
	</tr>
	<tr>
		<td rowspan=1 style="vertical-align:top;width:5%;'"><div data-bind="template: {name:'USAMapCounties'}"></div>
			New Cases per 100,000 population 7-day moving average: 
			<span class=mapStatusNegative2>1<=</span>
			<span class=mapStatusNegative1><=3</span>
			<span class=mapStatusNeutral><=10</span>
			<span class=mapStatusPositive1><=25</span>
			<span class=mapStatusPositive2>>25</span>
		</td>
		<td style="width:30%"><canvas id="trajectory" width="600" height="400"></canvas></td>
		<td width=30%>
				<canvas id="trajectoryTime" width="600" height="400"></canvas>
		</td>
		<td width=30%>
			<canvas id="deathsByPopulation" width="600" height="400"></canvas>
		</td>

	</tr>
	</tbody>
</table>

<script>

ctx = document.getElementById('byPopulation').getContext('2d');
ctx2 = document.getElementById('cases').getContext('2d');
ctx3 = document.getElementById('deathsByPopulation').getContext('2d');
ctx4 = document.getElementById('deaths').getContext('2d');
ctx5 = document.getElementById('trajectory').getContext('2d');
ctx6 = document.getElementById('trajectoryTime').getContext('2d');


let vm = new covidVisViewModel(ctx,ctx2,ctx3,ctx4,ctx5,ctx6);
async function myPA(){
	
	await vm.addLocation(42);		
	await vm.addLocation(84042101);	
	await vm.addLocation(84042003);
	await vm.addLocation(84042069);
	await vm.addLocation(84042017);
	await vm.addLocation(84042091);
	await vm.addLocation(84042085);
}

async function myStates()
{
	


	
	await vm.addLocation(16);		
	await vm.addLocation(41);	
	await vm.addLocation(49);
	await vm.addLocation(53);
}

async function goodVsBad()
{
	await vm.addLocation(36);		
	await vm.addLocation(42);	
	await vm.addLocation(34);
	await vm.addLocation(48);		
	await vm.addLocation(12);	
	await vm.addLocation(4);
}
async function myCounties()
{
	await vm.addLocation(84042091);
	await vm.addLocation(84048453);
}

let dc = new dataChoices(vm);


async function startup(){

	 await dc.populate();

//	await getStateWithCounties(4);

	vm.updateAll();
	
	ko.applyBindings(dc);
//	await myPA();
	vm.updateAll();
	//dc.selectedState(dc.states[37]);
	await highlightMap();
//	cycleRates(null);	
	await highlightCountyRates();
	$("g.state").children().on("click",function(evt){let code=$(evt.target).attr("code");dc.chooseStateByCode(parseInt(code));});
	await goodVsBad();
	vm.updateAll();
}

startup()


</script>